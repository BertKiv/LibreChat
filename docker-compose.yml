version: '3.8'

services:
  api:
    container_name: LibreChat
    image: ghcr.io/danny-avila/librechat-dev:latest
    command: >
      /bin/sh -c "
        mkdir -p /app/api/logs &&
        chown -R 1000:1000 /app/api/logs &&
        chmod -R 755 /app/api/logs &&
        npm run backend"
    volumes:
      - ./.env:/app/.env
      - ./librechat.yaml:/app/librechat.yaml
      - ./images:/app/client/public/images
      - ./logs:/app/api/logs
      - ./data-node:/data/db
    restart: always
    depends_on:
      - mongodb
      - rag_api
      - meilisearch
    user: "1000:1000"
    security_opt:
      - seccomp:unconfined
    ports:
      - "${PORT}:${PORT}"
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      - HOST=${HOST}
      - MEILI_HOST=http://meilisearch:7700
      - RAG_PORT=${RAG_PORT:-8000}
      - RAG_API_URL=http://rag_api:${RAG_PORT:-8000}
    networks:
      - databases
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.librechat.rule=Host(`chat.webfabrik.dev`)
      - traefik.http.routers.librechat.entrypoints=websecure
      - traefik.http.routers.librechat.tls=true
      - traefik.http.services.librechat.loadbalancer.server.port=${PORT}

  mongodb:
    container_name: chat-mongodb
    image: mongo
    restart: always
    volumes:
      - ./data-node:/data/db
    networks:
      - databases

  meilisearch:
    container_name: chat-meilisearch
    image: getmeili/meilisearch:v1.7.3
    restart: always
    environment:
      - MEILI_MASTER_KEY=UgV4HPYjJd23NvRO+a8r+iyyBk0emW9CduJloeEo7ns=
      - MEILI_NO_ANALYTICS=true
    volumes:
      - ./meili_data_v1.7:/meili_data
    networks:
      - databases

  rag_api:
    container_name: chat-rag-api
    build:
      context: .
      dockerfile: Dockerfile.rag
    restart: always
    volumes:
      - ./.env:/app/.env
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=librechat-rag
      - RAG_PORT=${RAG_PORT:-8000}
    ports:
      - "${RAG_PORT:-8000}:${RAG_PORT:-8000}"
    networks:
      - databases
    extra_hosts:
      - host.docker.internal:host-gateway

  tts-pl:
    image: synesthesiam/mozilla-tts
    environment:
      - LANGUAGE=pl
    networks:
      - web
    cpu_shares: 1024
    mem_limit: 1000M

  tts-de:
    image: synesthesiam/mozilla-tts
    environment:
      - LANGUAGE=de
    networks:
      - web
    cpu_shares: 1024
    mem_limit: 1000M

  tts-en:
    image: synesthesiam/mozilla-tts
    environment:
      - LANGUAGE=en
    networks:
      - web
    cpu_shares: 1024
    mem_limit: 1000M

  stt:
    image: onerahmet/openai-whisper-asr-webservice:latest
    environment:
      ASR_MODEL: base
      ASR_ENGINE: openai_whisper
    mem_limit: 1000M
    networks:
      - web
    cpu_shares: 1024

networks:
  databases:
    external: true
  web:
    external: true